use AppleScript version "2.4" -- Yosemite (10.10) or later
use scripting additions

tell application id "DNtp"
	set processedCount to 0
	set errorCount to 0
	
	repeat with theRecord in (selected records whose (type is markdown))
		try
			-- Store the current name for logging
			set originalName to name of theRecord
			set foundTitle to "" -- Move this up so we can store it for later
			
			-- First clear all existing custom metadata
			set custom meta data of theRecord to {}
			-- Clear existing tags
			set tags of theRecord to {}
			
			set src to plain text of theRecord
			set mdMarker to false
			set od to AppleScript's text item delimiters
			set paraCount to count paragraphs of src
			set i to 1
			
			-- Process metadata and tags first
			repeat until i > paraCount
				set theParagraph to paragraph i of src
				if (theParagraph is "---") and (not mdMarker) then
					set mdMarker to true
				else if (theParagraph is "---") and mdMarker then
					exit repeat
				else if mdMarker then
					if theParagraph contains ":" then
						try
							-- Switch to current application for string operations
							tell current application
								set colonOffset to offset of ":" in theParagraph
								set theKey to text 1 thru (colonOffset - 1) of theParagraph
								if length of theParagraph > colonOffset then
									set theValue to text (colonOffset + 1) thru -1 of theParagraph
								else
									set theValue to ""
								end if
							end tell
							
							set theKey to my trimWhitespace(theKey)
							set theValue to my trimWhitespace(theValue)
							
							if (theKey is "title") then
								set foundTitle to theValue
							end if
							
							-- Process non-title metadata first
							if (theKey is not "title") and (theKey is not "Tags") and (theValue is not "") then
								add custom meta data theValue for theKey to theRecord
							else if (theKey is "Tags") and (theValue is not "") then
								-- Handle tags
								set AppleScript's text item delimiters to ","
								set rawTags to text items of theValue
								set cleanTags to {}
								repeat with aTag in rawTags
									set cleanTag to my trimWhitespace(aTag)
									if cleanTag is not "" then
										copy cleanTag to end of cleanTags
									end if
								end repeat
								set tags of theRecord to cleanTags
							end if
							set AppleScript's text item delimiters to od
						on error errMsg
							log "Error processing line: " & theParagraph & " - " & errMsg
						end try
					end if
				end if
				set i to i + 1
			end repeat
			
			-- Add a small delay to let DEVONthink process the metadata changes
			delay 0.2
			
			-- Handle filename change last
			if (foundTitle is not "") then
				try
					log "Attempting to rename record: " & originalName & " to: " & foundTitle
					set name of theRecord to foundTitle
				on error errMsg
					log "Error renaming record " & originalName & ": " & errMsg
				end try
			end if
			
			set processedCount to processedCount + 1
			log "Successfully processed file " & processedCount
			
		on error errMsg
			set errorCount to errorCount + 1
			log "Error on file " & (processedCount + errorCount) & ": " & errMsg
		end try
	end repeat
	
	log "Processing complete. Successfully processed " & processedCount & " files with " & errorCount & " errors."
end tell

on trimWhitespace(theText)
	-- Remove leading/trailing whitespace
	repeat while theText begins with " " or theText begins with tab
		if theText begins with " " then
			set theText to text 2 thru -1 of theText
		else
			set theText to text 2 thru -1 of theText
		end if
	end repeat
	repeat while theText ends with " " or theText ends with tab
		if theText ends with " " then
			set theText to text 1 thru -2 of theText
		else
			set theText to text 1 thru -2 of theText
		end if
	end repeat
	return theText
end trimWhitespace
