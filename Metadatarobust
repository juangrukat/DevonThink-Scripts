tell application id "DNtp"
	repeat with theRecord in (selected records whose (type is markdown))
		-- First clear all existing custom metadata
		set custom meta data of theRecord to {}
		-- Clear existing tags
		set tags of theRecord to {}
		
		set src to plain text of theRecord
		set mdMarker to false
		set od to AppleScript's text item delimiters
		set foundTitle to "" -- Variable to hold the title for renaming
		set paraCount to count paragraphs of src
		set i to 1
		
		repeat until i > paraCount
			set theParagraph to paragraph i of src
			if (theParagraph is "---") and (not mdMarker) then
				set mdMarker to true
			else if (theParagraph is "---") and mdMarker then
				exit repeat
			else if mdMarker then
				if theParagraph contains ":" then
					try
						-- Switch to current application for string operations
						tell current application
							-- Find position of first colon
							set colonOffset to offset of ":" in theParagraph
							
							-- Get the key (text before colon)
							set theKey to text 1 thru (colonOffset - 1) of theParagraph
							
							-- Check if there's any text after the colon
							if length of theParagraph > colonOffset then
								set theValue to text (colonOffset + 1) thru -1 of theParagraph
							else
								set theValue to ""
							end if
						end tell
						
						-- Trim whitespace from both key and value
						set theKey to my trimWhitespace(theKey)
						set theValue to my trimWhitespace(theValue)
						
						if (theKey is "title") then
							set foundTitle to theValue
						end if
						if (theKey is not "Tags") and (theValue is not "") then
							add custom meta data theValue for theKey to theRecord
						else if (theKey is "Tags") and (theValue is not "") then
							-- Handle tags
							set AppleScript's text item delimiters to ","
							set rawTags to text items of theValue
							
							-- Clean each tag and build list
							set cleanTags to {}
							repeat with aTag in rawTags
								set cleanTag to my trimWhitespace(aTag)
								if cleanTag is not "" then
									copy cleanTag to end of cleanTags
								end if
							end repeat
							
							-- Set the cleaned tags
							set tags of theRecord to cleanTags
						end if
						set AppleScript's text item delimiters to od
					on error errMsg
						-- Skip this line if there's an error
						log "Error processing line: " & theParagraph & " - " & errMsg
					end try
				end if
			end if
			set i to i + 1
		end repeat
		
		if (foundTitle is not "") then
			set name of theRecord to foundTitle
		end if
	end repeat
end tell

on trimWhitespace(theText)
	-- Remove leading/trailing whitespace
	repeat while theText begins with " " or theText begins with tab
		if theText begins with " " then
			set theText to text 2 thru -1 of theText
		else
			set theText to text 2 thru -1 of theText
		end if
	end repeat
	repeat while theText ends with " " or theText ends with tab
		if theText ends with " " then
			set theText to text 1 thru -2 of theText
		else
			set theText to text 1 thru -2 of theText
		end if
	end repeat
	return theText
end trimWhitespace
